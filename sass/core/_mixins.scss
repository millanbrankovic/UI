// Mixins
//------------------------------------------------------------
//


// Retina Sprite Mixin
// --------------------------------------------------

$icons: sprite-map("icons/*.png", $layout: smart);
$icons-2x: sprite-map("icons-2x/*.png", $layout: smart);

@mixin retina-icon($sprite) {
    background-image: sprite-url($icons);
    background-position: sprite-position($icons, $sprite);
    background-repeat: no-repeat;
    overflow: hidden;
    display: block;
    height: image-height(sprite-file($icons, $sprite));
    width: image-width(sprite-file($icons, $sprite));

    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        background-image: sprite-url($icons-2x);
        background-size: (image-width(sprite-path($icons-2x)) / 2) (image-height(sprite-path($icons-2x)) / 2);
        background-position: round(nth(sprite-position($icons-2x, $sprite), 1) / 2) round(nth(sprite-position($icons-2x, $sprite), 2) / 2);
        height: image-height(sprite-file($icons-2x, $sprite)) / 2;
        width: image-width(sprite-file($icons-2x, $sprite)) / 2;
    }
}


// Match Colors Mixin
// --------------------------------------------------

@mixin match-colors($bg: false, $fg: false) {
    @if ($fg) {
        color: $fg;
    } @else {
        @if (lightness($bg) > 50) {
            color: rgba(#000, .6);
        } @else {
            color: rgba(#fff, .95);
        }
    }
}


// Same Size Mixin
// --------------------------------------------------

@mixin same-size($width, $height: $width) {
    width: $width;
    height: $height;
}


// Font Smoothing Mixin
// --------------------------------------------------

@mixin font-smoothing($value: antialiased) {
    @if $value == antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
    @else {
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: auto;
    }
}


// Selected Background Color
// --------------------------------------------------

@mixin selection-colors($color, $background) {
    $prefixes: ("-moz-", "-webkit-", "-o-", "-ms-", "");

    @each $prefix in $prefixes {
        &::#{$prefix}selection {
            color: $color;
            background: $background;
        }
    }
}


// Vertical Aligment
// --------------------------------------------------

@mixin vertical-aligment($child) {
    font-size: 0;

    &:after {
        content: "";
        height: 100%;
        display: inline-block;
        vertical-align: middle;
    }

    #{$child} {
        display: inline-block;
        vertical-align: middle;
    }
}

